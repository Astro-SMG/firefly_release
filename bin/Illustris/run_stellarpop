#! /usr/bin/env python

import sys
for arg in sys.argv:
    print( arg )

from os.path import join
import os
import time
import numpy as np
import glob
import astropy.cosmology as co
cosmo = co.Planck13
#cosmo=co.FlatLambdaCDM(H0=70,Om0=0.3)

# for one galaxy spectrum
import GalaxySpectrumFIREFLY as gs
import StellarPopulationModel as spm

path_2_spec = sys.argv[1]


def runSpec(path_2_spec):
	
	t0=time.time()
	spec=gs.GalaxySpectrumFIREFLY(path_2_spec, milky_way_reddening=False)
	spec.openILLUSTRISsimulatedSpectrum()
	ageMax = np.log10(cosmo.age(spec.redshift).value*1e9)
		
	outputFolder = join( os.environ['ILLUSTRIS_DIR'], 'stellarpop')
	output_file = join(outputFolder , 'spFly-' + os.path.basename(path_2_spec) )
	print( t0                          )
	print( output_file                 )
	print( "--------------------------")
	if os.path.isdir(outputFolder)==False:
		os.mkdir(outputFolder)
	
	prihdr = spm.pyfits.Header()
	prihdr['FILE']          = os.path.basename(output_file)
	prihdr['FITTER']	= "FIREFLY"
	id = int(os.path.basename(path_2_spec)[:-5].split('_')[-1])
	print(id)	
	prihdr['ID']  	    	= id
	prihdr['AGEMIN']	= "6"		
	prihdr['AGEMAX']	= "10"
	prihdr['ZMIN']	        = "-3.0"
	prihdr['ZMAX']	        = "1.0"
	prihdr['redshift']	    = spec.redshift
	prihdr['HIERARCH age_universe']	= np.round(cosmo.age(0.01).value,3)
	prihdu = spm.pyfits.PrimaryHDU(header=prihdr)

	tables = [prihdu]
	did_not_converged = 0.
	try :
		model_1 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['MILES'], imfs = ['cha'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_1.fit_models_to_data()
		tables.append( model_1.tbhdu )
		print "m1", time.time()-t0
	except (ValueError):
		tables.append( model_1.create_dummy_hdu() )
		did_not_converged +=1
		
	try :
		model_2 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['MILES'], imfs = ['ss'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_2.fit_models_to_data()
		tables.append( model_2.tbhdu )
		print "m2", time.time()-t0
	except (ValueError):
		tables.append( model_2.create_dummy_hdu() )
		did_not_converged +=1

	try :
		model_3 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['MILES'], imfs = ['kr'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_3.fit_models_to_data()
		tables.append( model_3.tbhdu )
		print "m3", time.time()-t0
	except (ValueError):
		tables.append( model_3.create_dummy_hdu() )
		did_not_converged +=1
		
	try :
		model_4 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['ELODIE'], imfs = ['cha'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_4.fit_models_to_data()
		print "m4", time.time()-t0
		tables.append( model_4.tbhdu )
		did_not_converged +=1

	except (ValueError):
		tables.append( model_4.create_dummy_hdu() )
		

	try :
		model_5 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['ELODIE'], imfs = ['ss'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_5.fit_models_to_data()
		tables.append( model_5.tbhdu )
		print "m5", time.time()-t0
	except (ValueError):
		tables.append( model_5.create_dummy_hdu() )
		did_not_converged +=1
		

	try :
		model_6 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['ELODIE'], imfs = ['kr'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_6.fit_models_to_data()
		tables.append( model_6.tbhdu )
		print "m6", time.time()-t0
	except (ValueError):
		tables.append( model_6.create_dummy_hdu() )
		did_not_converged +=1
	
	try :
		model_7 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['STELIB'], imfs = ['cha'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_7.fit_models_to_data()
		print "m4", time.time()-t0
		tables.append( model_7.tbhdu )

	except (ValueError):
		tables.append( model_7.create_dummy_hdu() )
		did_not_converged +=1
		

	try :
		model_8 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['STELIB'], imfs = ['ss'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_8.fit_models_to_data()
		tables.append( model_8.tbhdu )
		print "m5", time.time()-t0
	except (ValueError):
		tables.append( model_8.create_dummy_hdu() )
		did_not_converged +=1
		

	try :
		model_9 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['STELIB'], imfs = ['kr'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
		model_9.fit_models_to_data()
		tables.append( model_9.tbhdu )
		print "m6", time.time()-t0
	except (ValueError):
		tables.append( model_9.create_dummy_hdu() )
		did_not_converged +=1
	
	if did_not_converged < 9 :
		complete_hdus = spm.pyfits.HDUList(tables)
		if os.path.isfile(output_file):
			os.remove(output_file)
			
		complete_hdus.writeto(output_file)

	print ("time used =", time.time()-t0 ,"seconds")
	return spec


spec = runSpec( path_2_spec )
	
		
